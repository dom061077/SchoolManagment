version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres:11
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: schoolmanagement
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - sm_network      
    volumes:
      - postgres_data:/data/postgres          
    restart: unless-stopped
  keycloak:
    container_name: keycloak-sm
    image: quay.io/keycloak/keycloak:21.1.1
    hostname: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres123     
      KC_HOSTNAME_ADMIN_URL: https://www.warriorit.site 
      KC_HOSTNAME_URL: https://www.warriorit.site
      KC_PROXY: edge

    ports:
      - "8080:8080"
    networks:
      - sm_network 
    depends_on:
      - postgres           
    command:
      - "start"   
    extra_hosts:
      - "keycloak-sm:127.0.0.1"
      
      
  sm-api:
    container_name: sm-api
    image: dom061077/sm-api:1.0.1
    ports:
      - "8088:8088"
    networks:
      - sm_network
    depends_on:
      - postgres       
  pgadmin_sm:
    container_name: sm_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_LISTEN_PORT: 8083

    ports:
      - "5050:8083"
    networks:
      - sm_network      
    depends_on:
      - postgres      
    volumes:
      - ./backup:/backup  # Map the backup directory to your Windows host
    restart: unless-stopped
  sm-ui:
    container_name: sm-ui
    image: dom061077/sm-ui:0.0.0
    ports:
      - 80:80
      - 443:443
    networks:
      - sm_network
    depends_on:
      - sm-api    
    volumes:
      - ./nginx_logs:/var/log/nginx       
    
networks:
  sm_network:
    driver: bridge
volumes:
  postgres_data:
